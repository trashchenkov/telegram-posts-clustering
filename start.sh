#!/bin/bash

echo "üöÄ –ó–∞–ø—É—Å–∫ Telegram Posts Aggregator"
echo "=================================="

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ Python
if ! command -v python3 &> /dev/null; then
    echo "‚ùå Python3 –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Python 3.8+"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ Node.js
if ! command -v node &> /dev/null; then
    echo "‚ùå Node.js –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Node.js 16+"
    exit 1
fi

echo "‚úÖ Python –∏ Node.js –Ω–∞–π–¥–µ–Ω—ã"

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ Python –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
check_python_deps() {
    echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ Python –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –ø–∞–∫–µ—Ç—ã
    python -c "
import sys
missing = []
try:
    import fastapi
    import uvicorn
    import sentence_transformers
    import sklearn
    import openai
    import httpx
    import bs4
    print('‚úÖ –û—Å–Ω–æ–≤–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –Ω–∞–π–¥–µ–Ω—ã')
except ImportError as e:
    missing.append(str(e))
    print('‚ùå –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç')
    sys.exit(1)
" 2>/dev/null
    return $?
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ Node.js –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π  
check_node_deps() {
    echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ Node.js –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
    
    if [ ! -d "node_modules" ]; then
        return 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –ø–∞–∫–µ—Ç—ã
    if [ ! -d "node_modules/react" ] || [ ! -d "node_modules/vite" ] || [ ! -d "node_modules/typescript" ]; then
        return 1
    fi
    
    echo "‚úÖ Node.js –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –Ω–∞–π–¥–µ–Ω—ã"
    return 0
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ backend
start_backend() {
    echo "üêç –ó–∞–ø—É—Å–∫ Backend..."
    cd backend
    
    # –°–æ–∑–¥–∞–µ–º –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    if [ ! -d "venv" ]; then
        echo "üì¶ –°–æ–∑–¥–∞–Ω–∏–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
        python3 -m venv venv
    fi
    
    # –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ
    source venv/bin/activate
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω—É–∂–Ω–∞ –ª–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
    NEED_INSTALL=false
    
    # –ï—Å–ª–∏ requirements.txt –Ω–æ–≤–µ–µ —á–µ–º –ø–æ—Å–ª–µ–¥–Ω—è—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞
    if [ requirements.txt -nt venv/pyvenv.cfg ]; then
        NEED_INSTALL=true
        echo "üìù requirements.txt –æ–±–Ω–æ–≤–ª–µ–Ω"
    fi
    
    # –ï—Å–ª–∏ —Ñ–∞–π–ª-–º–∞—Ä–∫–µ—Ä —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    if [ ! -f "venv/installed" ]; then
        NEED_INSTALL=true
        echo "üìù –ú–∞—Ä–∫–µ—Ä —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω"
    fi
    
    # –ï—Å–ª–∏ –æ—Å–Ω–æ–≤–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç
    if ! check_python_deps; then
        NEED_INSTALL=true
        echo "üìù –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –æ—Å–Ω–æ–≤–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏"
    fi
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
    if [ "$NEED_INSTALL" = true ]; then
        echo "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Python –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
        pip install -r requirements.txt
        if [ $? -eq 0 ]; then
        touch venv/installed
            echo "‚úÖ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
        else
            echo "‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"
            exit 1
        fi
    else
        echo "‚úÖ Python –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
    fi
    
    # –°–æ–∑–¥–∞–µ–º .env –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    if [ ! -f ".env" ]; then
        echo "‚öôÔ∏è –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..."
        cp env.example .env
        echo "üìù –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ backend/.env –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ LLM –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞"
    fi
    
    echo "üöÄ –ó–∞–ø—É—Å–∫ API —Å–µ—Ä–≤–µ—Ä–∞ –Ω–∞ http://localhost:8000"
    python main.py &
    BACKEND_PID=$!
    cd ..
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ frontend
start_frontend() {
    echo "‚öõÔ∏è –ó–∞–ø—É—Å–∫ Frontend..."
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω—É–∂–Ω–∞ –ª–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
    NEED_INSTALL=false
    
    # –ï—Å–ª–∏ package.json –Ω–æ–≤–µ–µ —á–µ–º node_modules
    if [ package.json -nt node_modules/.installed ] || [ ! -f "node_modules/.installed" ]; then
        NEED_INSTALL=true
        echo "üìù package.json –æ–±–Ω–æ–≤–ª–µ–Ω –∏–ª–∏ –º–∞—Ä–∫–µ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω"
    fi
    
    # –ï—Å–ª–∏ –æ—Å–Ω–æ–≤–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç
    if ! check_node_deps; then
        NEED_INSTALL=true
        echo "üìù –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –æ—Å–Ω–æ–≤–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏"
    fi
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
    if [ "$NEED_INSTALL" = true ]; then
        echo "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Node.js –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
        npm install
        if [ $? -eq 0 ]; then
        touch node_modules/.installed
            echo "‚úÖ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
        else
            echo "‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"
            exit 1
        fi
    else
        echo "‚úÖ Node.js –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
    fi
    
    echo "üöÄ –ó–∞–ø—É—Å–∫ UI –Ω–∞ http://localhost:5173"
    npm run dev &
    FRONTEND_PID=$!
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
cleanup() {
    echo ""
    echo "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤..."
    if [ ! -z "$BACKEND_PID" ]; then
        kill $BACKEND_PID 2>/dev/null
    fi
    if [ ! -z "$FRONTEND_PID" ]; then
        kill $FRONTEND_PID 2>/dev/null
    fi
    exit 0
}

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–∏–≥–Ω–∞–ª–æ–≤
trap cleanup SIGINT SIGTERM

# –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–∏—Å—ã
start_backend
sleep 3
start_frontend

echo ""
echo "‚úÖ –°–µ—Ä–≤–∏—Å—ã –∑–∞–ø—É—â–µ–Ω—ã!"
echo "üìñ Backend API: http://localhost:8000/docs"
echo "üåê Frontend UI: http://localhost:5173"
echo ""
echo "–ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏"

# –ñ–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
wait 